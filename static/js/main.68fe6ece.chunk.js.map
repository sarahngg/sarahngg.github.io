{"version":3,"sources":["Text.js","Preview.js","Section.js","Home.js","About.js","Detail.js","Copyright.js","projectList.js","App.js","theme.js","reportWebVitals.js","index.js"],"names":["Text","props","value","textElement","type","Typography","variant","component","gutterBottom","color","sx","mt","Preview","Card","CardActionArea","CardMedia","height","image","alt","CardContent","minHeight","title","description","bgcolors","Section","Grid","container","bgcolor","id","length","py","item","xs","md","Container","contentList","spacing","map","content","to","style","textDecoration","Home","sections","section","index","React","key","addPropsToSections","layout","projectList","About","width","border","p","overflow","styleSmall","styledModal","display","alignItems","justifyContent","Detail","open","setOpen","handleClose","history","goBack","Links","linkButtons","links","Object","keys","linkName","url","Link","href","target","Button","Stack","direction","onClick","size","Modal","onClose","aria-labelledby","aria-describedby","Box","useMediaQuery","role","technologies","tech","Chip","label","clickable","my","date","blurb","defaultProps","Copyright","align","Date","getFullYear","App","useHistory","className","path","render","match","find","i","params","itemId","makeThemeWithPalette","palette","createTheme","typography","fontFamily","theme","light","primary","main","secondary","background","paper","dark","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.68fe6ece.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction Text(props) {\r\n  if (!props.value) return <span/>;\r\n  let textElement = \"\";\r\n  switch (props.type) {\r\n    case \"title\":\r\n      textElement = (\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          {props.value}\r\n        </Typography>\r\n      )\r\n      break;\r\n    case \"description\":\r\n      textElement = (\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          {props.value}\r\n        </Typography>\r\n      )\r\n      break;\r\n    case \"card-title\":\r\n      textElement = (\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          {props.value}\r\n        </Typography>\r\n      )\r\n      break;\r\n    case \"card-description\":\r\n      textElement = (\r\n        <Typography variant=\"body1\" color=\"text.secondary\">\r\n          {props.value}\r\n        </Typography>\r\n      )\r\n      break;\r\n    case \"modal-title\":\r\n      textElement = (\r\n        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n          {props.value}\r\n        </Typography>\r\n      )\r\n      break;\r\n    case \"modal-description\":\r\n      textElement = (\r\n        <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n          {props.value}\r\n        </Typography>\r\n      )\r\n      break;\r\n    case \"normal\":  /* fall through (default normal) */\r\n    default:\r\n      textElement = (\r\n        <Typography gutterBottom>\r\n          {props.value}\r\n        </Typography>\r\n      )\r\n  }\r\n  return textElement;\r\n}\r\n\r\n// Text.defaultProps = {\r\n//   type: \"normal\",\r\n//   value: \"Placeholder Text\"\r\n// }\r\n\r\nexport default Text;","import * as React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Text from './Text';\r\nfunction Preview (props) {\r\n  return (\r\n    <Card>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"180\"\r\n          image={props.image}\r\n          alt=\"random image\"\r\n        />\r\n        <CardContent sx={{ minHeight: \"8rem\"}}>\r\n          <Text type=\"card-title\" value={props.title}/>\r\n          <Text type=\"card-description\" value={props.description}/>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  )\r\n}\r\n\r\n// Preview.defaultProps = {\r\n//   \"title\": \"Preview Title Placeholder\", \r\n//   \"description\": \"Preview description placeholder\", \r\n//   \"image\": \"\",\r\n//   \"date\": 1990,\r\n//   \"blurb\": \"Blub placeholder\"\r\n// }\r\n\r\nexport default Preview;","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Preview from './Preview';\r\nimport Text from './Text';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst bgcolors = [\r\n  'primary.light',\r\n  'secondary.light'\r\n]\r\n\r\nfunction getColor(id) {\r\n  return bgcolors[id%bgcolors.length];\r\n}\r\n\r\nfunction Section (props) {\r\n  return (\r\n    <Grid container bgcolor={getColor(props.id)} py={3}>\r\n      <Grid item xs={1} md={2}/>\r\n      <Grid item xs={10} md={8} >\r\n      <Container>\r\n        <Text type=\"title\" value={props.title}/>\r\n        <Text type=\"description\" value={props.description}/>\r\n        {props.contentList && (<Grid container py={2} spacing={2}>\r\n          {props.contentList.map( content => \r\n          <Grid item xs={12} md={4} key={content.id} >\r\n          <Link to={`/p/${content.id}`} style={{ textDecoration: 'none' }}>\r\n          <Preview {... content}/>\r\n          </Link>\r\n          </Grid>)}\r\n        </Grid>)}\r\n      </Container>\r\n      </Grid>\r\n      <Grid item xs={1} md={2}/>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n// Section.defaultProps = {\r\n//   title: \"Section Title Placeholder\", \r\n//   description: \"Section Description Placeholder\",\r\n//   contentList: [],\r\n//   layout: \"default\",\r\n// }\r\n\r\nexport default Section;","import * as React from 'react';\r\nimport Section from './Section';\r\n\r\n\r\nfunction Home(props) {\r\n  const sections = [\r\n    <Section title=\"Sarah Ng\" description=\"👋 Hello\" layout=\"hero\"/>,\r\n    <Section title=\"Projects\" description=\"Things I did\" \r\n    contentList={props.projectList}/>\r\n  ];\r\n\r\n  function addPropsToSections (sections) {\r\n    return sections.map((section, index) => {\r\n      return React.cloneElement(section, {\r\n        id: index,\r\n        key: index\r\n      })\r\n    })\r\n  }\r\n  const sectionsWithIdKey = addPropsToSections(sections);\r\n  return sectionsWithIdKey;\r\n}\r\n\r\nexport default Home;\r\n","import * as React from 'react';\r\n\r\nfunction About() {\r\n  return (\r\n    <h1>About</h1>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import * as React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Box from '@material-ui/core/Box';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Link from '@material-ui/core/Link';\r\nimport Stack from '@material-ui/core/Stack';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Text from './Text';\r\n\r\nconst style = {\r\n  width: 600,\r\n  bgcolor: \"background.paper\",\r\n  border: 0,\r\n  p: 4,\r\n  py: 5,\r\n  overflow: \"auto\",\r\n};\r\n\r\nconst styleSmall = {\r\n  width: \"100%\",\r\n  bgcolor: \"background.paper\",\r\n  border: 0,\r\n  p: 4,\r\n  py: 5,\r\n  overflow: \"auto\",\r\n};\r\n\r\nconst styledModal = {\r\n  // position: \"fixed\",\r\n  // right: 0,\r\n  // bottom: 0,\r\n  // top: 0,\r\n  // left: 0,\r\n  display: \"flex\",\r\n  alignItems: \"top\",\r\n  justifyContent: \"center\",\r\n};\r\nfunction Detail (props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    history.goBack();\r\n    setOpen(false);\r\n  }\r\n  const { item, history } = props;\r\n  \r\n  const Links = () => {\r\n    const linkButtons =\r\n    item.links && Object.keys(item.links).map(linkName => {\r\n        let url = item.links[linkName];\r\n        if (url) {\r\n          return (\r\n            <Link key={url} href={url} target=\"_blank\" color=\"inherit\">\r\n              <Button variant=\"outlined\">{linkName}</Button>\r\n            </Link>\r\n          )\r\n        }\r\n      });\r\n    return (\r\n      <Stack direction=\"row-reverse\" justifyContent=\"flex-start\"\r\n      alignItems=\"center\" spacing={1} sx={{ mt: 2 }}>\r\n        {linkButtons && linkButtons}\r\n        <Button onClick={handleClose} size=\"medium\">Back</Button>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Modal sx={styledModal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby={item.title}\r\n        aria-describedby={item.description}\r\n      >\r\n    <Box sx={useMediaQuery('(min-width:600px)') ? style : styleSmall}>\r\n      <Container >\r\n        {item.role ? \r\n          <Text type=\"modal-title\" value={`${item.role} @ ${item.title}`}/> : \r\n          <Text type=\"modal-title\" value={item.title}/>}\r\n        {item.technologies && (\r\n          <Stack direction=\"row\" spacing={1}>\r\n            {item.technologies.map(tech => (\r\n              <Chip label={tech} size=\"small\" component=\"a\" href=\"\" clickable />\r\n            ))}\r\n          </Stack>)}\r\n        <CardMedia\r\n            component=\"img\"\r\n            height=\"200\"\r\n            image={item.image}\r\n            alt=\"random image\"\r\n            sx={{my: 2}}\r\n          /> \r\n        {item.date ? (<Text value={`${item.date} | ${item.description}`}/>) : (\r\n          <Text value={item.description}/>\r\n        )}\r\n        <Text type=\"modal-description\" value={item.blurb}/>\r\n        <Links />\r\n      </Container>\r\n    </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nDetail.defaultProps = {\r\n  \"image\": \"https://source.unsplash.com/random/640x360/?minimalist\",\r\n  \"blurb\": \"An interesting project\"\r\n}\r\n\r\nexport default Detail;","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Grid item>\r\n      <Container sx={{ py: 4 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n          {'Copyright © '}\r\n          <Link color=\"inherit\" href=\"https://sarahngg.github.io/\">\r\n            sarahngg.github.io\r\n          </Link>{' '}\r\n          {new Date().getFullYear()}.\r\n        </Typography>\r\n      </Container>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Copyright;","/**\r\n * Mandatory fields:\r\n * id (unique), title, description\r\n */\r\n\r\nconst projectList = [\r\n\t{\r\n\t\t\"id\": \"portfolio\",\r\n\t\t\"title\": \"My Portfolio\",\r\n\t\t\"description\": \"This website!\",\r\n\t\t\"role\": \"Frontend Developer\",\r\n\t\t\"technologies\": [\"ReactJS\", \"Material-UI v5\", \"GitHub Pages\"],\r\n\t\t\"image\": \"https://source.unsplash.com/random/640x360/?minimalist\",\r\n\t\t\"date\": 2021,\r\n\t\t\"blurb\": \"This is a website showcasing my projects and roles\",\r\n\t\t\"links\" : {\r\n\t\t\t\"trust the recursion\" : \"https://sarahngg.github.io/\",\r\n\t\t\t\"repo\" : \"https://github.com/sarahngg/sarahngg.github.io\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"id\": \"chatroom\",\r\n\t\t\"title\": \"Chatroom App\",\r\n\t\t\"description\": \"A full-stack chatroom application\",\r\n\t\t\"role\": \"Fullstack Developer\",\r\n\t\t\"technologies\": [\"JavaScript\", \"Node.js\", \"MongoDB\", \"CSS\"],\r\n\t\t\"image\": \"https://res.cloudinary.com/sng/image/upload/v1630534979/portfolio/chatapp.jpg\",\r\n\t\t\"date\": 2020,\r\n\t\t\"blurb\": \"Created a Single-page Application with vanilla JavaScript. Styled the GUI with CSS. Implemented WebSocket client and server for communication. Set up a MongoDB database for the application, created REST endpoints for reading objects from the database. Implemented a simple authentication mechanism, protected server resources from unauthorized users by using session cookies, sanitize user input to defend against Cross-Site Scripting attacks.\",\r\n\t\t\"links\" : {\r\n\t\t\t\"demo\": \"https://youtu.be/Ttwih3m7DK8\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"id\": \"community-centre\",\r\n\t\t\"title\": \"Community Centre Database\",\r\n\t\t\"description\": \"Manage classes, memberships, and equipment\",\r\n\t\t\"role\": \"Database Developer\",\r\n\t\t\"technologies\": [\"SQL\", \"CSS\"],\r\n\t\t\"image\": \"https://res.cloudinary.com/sng/image/upload/v1630430587/portfolio/cc.png\",\r\n\t\t\"date\": 2020,\r\n\t\t\"blurb\": \"(Note: The project is hosted on UBC student server which may only allow certain operations.) Designed, implemented, and populated a relational database application using relational database knowlege, extended website templates for SQL*Plus, PHP, and HTML. Styled website with CSS.\",\r\n\t\t\"links\" : {\r\n\t\t\t\"demo link\" : \"https://www.students.cs.ubc.ca/~sarahn26/cc.php\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"id\": \"gh-issue\",\r\n\t\t\"title\": \"GitHub Issue Viewer\",\r\n\t\t\"description\": \"A frontend app to view issues of a public repo\",\r\n\t\t\"role\": \"Frontend Developer\",\r\n\t\t\"technologies\": [\"ReactJS\", \"Redux\", \"GitHub API\", \"GitHub Pages\"],\r\n\t\t\"image\": \"https://res.cloudinary.com/sng/image/upload/v1630535135/portfolio/ghissue.jpg\",\r\n\t\t\"date\": 2019,\r\n\t\t\"blurb\": \"The web application contains a search page with a search bar where users can paste a piblic GitHub repo URL. Using GitHub Issues API, the results page displays all (open, closed, pull requests) issues from the search query, and they are filterable by issue types. Issue types are indicated using the icons. Fetching errors are covered.\",\r\n\t\t\"links\" : {\r\n\t\t\t\"repo\" : \"https://github.com/sarahngg/gh-issues-viewer\",\r\n\t\t\t\"demo\" : \"https://sarahngg.github.io/gh-issues-viewer/\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"id\": \"learnoncology\",\r\n\t\t\"title\": \"LearnOncology.ca\",\r\n\t\t\"description\": \"Educational resource about oncology management\",\r\n\t\t\"role\": \"Webmaster\",\r\n\t\t\"image\": \"https://res.cloudinary.com/sng/image/upload/b_rgb:ffffff,bo_100px_solid_rgb:ffffff/v1630358741/portfolio/lo.png\",\r\n\t\t\"blurb\": \"I decreased the load time by 75% through migrating content from the old Wordpress site to Webflow. I redesigned the learning resources and its templates using CSS concepts in Webflow. As non-technical content editors would be adding contents to the site, I created quick guides and detailed tutorial documentations. In addition, I managed SEO and integrated the site with Google Analytics.\",\r\n\t\t\"links\" : {\r\n\t\t\t\"link\" : \"https://learnoncology.ca\"\r\n\t\t}\r\n\t},\r\n  {\r\n\t\t\"id\": \"project-x\",\r\n\t\t\"title\": \"Project X\",\r\n\t\t\"description\": \"Confidential\",\r\n\t\t\"image\": \"https://source.unsplash.com/random/640x360/?confidential\",\r\n\t\t\"date\": 2021,\r\n\t\t\"blurb\": \"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"\r\n\t}\r\n]\r\n\r\nexport default projectList;","import * as React from 'react';\r\nimport { useHistory, Route } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport Detail from './Detail';\r\nimport Copyright from './Copyright';\r\nimport projectList from './projectList.js';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  let history = useHistory();\r\n \r\n  return (\r\n    <div className=\"App\">\r\n    <Route path=\"/\" render={() => (\r\n        <Home projectList={projectList}/>\r\n      )} />\r\n    <Route path=\"/p/:itemId\" render={({ match }) => (\r\n      <Detail \r\n        history={history} \r\n        item={projectList.find(i => i.id === match.params.itemId)} />\r\n    )} />\r\n    <Copyright />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createTheme } from '@material-ui/core/styles';\r\n\r\nconst lightPalette = {\r\n  type: 'light',\r\n  primary: {\r\n    main: '#78909c',\r\n  },\r\n  secondary: {\r\n    main: '#ffab40',\r\n  },\r\n  background: {\r\n    paper: '#f5f5f5',\r\n  },\r\n};\r\n\r\nconst darkPalette = {\r\n  type: 'dark',\r\n  primary: {\r\n    main: '#78909c',\r\n  },\r\n  secondary: {\r\n    main: '#ffab40',\r\n  },\r\n};\r\n\r\nfunction makeThemeWithPalette (palette) {\r\n  return createTheme({\r\n    palette: palette,\r\n    typography: {\r\n      fontFamily: 'Questrial',\r\n    },\r\n  // spacing: 6,\r\n  })\r\n}\r\n\r\nconst theme = { \r\n  light: makeThemeWithPalette(lightPalette), \r\n  dark:  makeThemeWithPalette(darkPalette)\r\n};\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport theme from './theme';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <ThemeProvider theme={theme.light}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}